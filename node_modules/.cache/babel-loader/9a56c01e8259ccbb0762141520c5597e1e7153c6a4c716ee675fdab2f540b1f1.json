{"ast":null,"code":"var _jsxFileName = \"/Users/ryanboado/Code/Pokemon App /pokemon-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport fetchQuotes from \"./api/api\"; // Update the path to match the actual location\nimport { prettyDOM } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [pokemonData, setPokemonData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  let test = 32;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const pokemonData = await fetchQuotes();\n        setPokemonData(pokemonData);\n        setLoading(false);\n        // console.log(typeof quotesData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const startTimer = () => {};\n  const stopTimer = () => {};\n  const resetTimer = () => {};\n\n  // console.log(\"Your data is :\", pokemonData.moves[0].move.name);\n  console.log(pokemonData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pokemon Abilities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"0 mins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"0 secs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startTimer,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopTimer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetTimer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xGYWbDNhEH8XzDSftLTMPLtGidA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchQuotes","prettyDOM","jsxDEV","_jsxDEV","App","_s","pokemonData","setPokemonData","loading","setLoading","test","fetchData","error","console","startTimer","stopTimer","resetTimer","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ryanboado/Code/Pokemon App /pokemon-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport fetchQuotes from \"./api/api\"; // Update the path to match the actual location\nimport { prettyDOM } from \"@testing-library/react\";\n\nconst App = () => {\n  const [pokemonData, setPokemonData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  let test = 32;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const pokemonData = await fetchQuotes();\n        setPokemonData(pokemonData);\n        setLoading(false);\n        // console.log(typeof quotesData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n\n  const startTimer = () => {\n\n  }\n\n  const stopTimer = () => {\n\n  }\n\n  const resetTimer = () => {\n\n  }\n\n  // console.log(\"Your data is :\", pokemonData.moves[0].move.name);\n  console.log(pokemonData);\n\n  return (\n    <div>\n      <h1>Pokemon Abilities</h1>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div>\n            <h1>Timer</h1>\n            <span>0 mins</span>\n            <span>0 secs</span>\n            <div>\n              <button onClick={startTimer}>Start</button>\n              <button onClick={stopTimer}></button>\n              <button onClick={resetTimer}></button>\n            </div>\n          {/* <div className=\"border\">\n            <h2 className=\"font-bold text-2xl\">Moves:</h2>\n            {pokemonData.moves.map((movesObj, index) => (\n              <span key={index}>{movesObj.move.name}, </span>\n            ))}\n          </div>\n          <div>\n            <h2 className=\"font-bold text-2xl\">Types:</h2>\n            <ul>\n              {pokemonData.types.map((typesObj, index) => (\n                <li key={index}>{typesObj.type.name}</li>\n              ))}\n            </ul>\n          </div>\n          <div>\n            <h2 className=\"font-bold text-2xl\">Stats:</h2>\n            <ul>\n              {pokemonData.stats.map((statsObj, index) => (\n                <li key={index}>\n                  Base Stat: {statsObj.base_stat} Name: {statsObj.stat.name}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <img src={pokemonData.sprites.front_default} alt=\"\" />\n          <img src={pokemonData.sprites.back_default} alt=\"\" />\n          {pokemonData.sprites.map((spritesObj, index) => (\n            <img src={spritesObj.front_default} alt=\"\" />\n          ))}\n          <pre>{JSON.stringify(pokemonData.moves, null, 2)}</pre> */}\n        </div>\n      )}\n    </div>\n  );\n};\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,WAAW,CAAC,CAAC;AACrC,SAASC,SAAS,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5C,IAAIW,IAAI,GAAG,EAAE;EACbZ,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAML,WAAW,GAAG,MAAMN,WAAW,CAAC,CAAC;QACvCO,cAAc,CAACD,WAAW,CAAC;QAC3BG,UAAU,CAAC,KAAK,CAAC;QACjB;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMG,UAAU,GAAGA,CAAA,KAAM,CAEzB,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM,CAExB,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM,CAEzB,CAAC;;EAED;EACAH,OAAO,CAACI,GAAG,CAACX,WAAW,CAAC;EAExB,oBACEH,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBd,OAAO,gBACNL,OAAA;MAAAe,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjBnB,OAAA;MAAAe,QAAA,gBACIf,OAAA;QAAAe,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdnB,OAAA;QAAAe,QAAA,EAAM;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnBnB,OAAA;QAAAe,QAAA,EAAM;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnBnB,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAQoB,OAAO,EAAET,UAAW;UAAAI,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3CnB,OAAA;UAAQoB,OAAO,EAAER;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACrCnB,OAAA;UAAQoB,OAAO,EAAEP;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA+BL,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CArFID,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAsFT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}