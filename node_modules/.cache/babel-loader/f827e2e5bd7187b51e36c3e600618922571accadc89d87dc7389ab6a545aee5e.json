{"ast":null,"code":"var _jsxFileName = \"/Users/ryanboado/Code/Pokemon App /pokemon-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport fetchQuotes from \"./api/api\"; // Update the path to match the actual location\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [quotes, setQuotes] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const quotesData = await fetchQuotes();\n        setQuotes(quotesData);\n        // console.log(quotesData);\n        // console.log(typeof quotesData);\n        console.log(quotesData.abilities[0].ability);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // console.log(quotes.abilities[0].ability);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quotes App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), quotes.abilities[0].ability]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"SUU9YDCVpUtZ6H24bwM60eqca2E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchQuotes","jsxDEV","_jsxDEV","App","_s","quotes","setQuotes","fetchData","quotesData","console","log","abilities","ability","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ryanboado/Code/Pokemon App /pokemon-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport fetchQuotes from \"./api/api\"; // Update the path to match the actual location\n\nconst App = () => {\n  const [quotes, setQuotes] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const quotesData = await fetchQuotes();\n        setQuotes(quotesData);\n        // console.log(quotesData);\n        // console.log(typeof quotesData);\n        console.log(quotesData.abilities[0].ability);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // console.log(quotes.abilities[0].ability);\n\n  return (\n    <div>\n      <h1>Quotes App</h1>\n      {/* {Object.entries(quotes.abilities).map((quote, index) => (\n          <li key={index}>{quote}</li>\n        ))} */}\n      {quotes.abilities[0].ability}\n      {/* <pre>{JSON.stringify(quotes, null, 2)}</pre> */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,UAAU,GAAG,MAAMR,WAAW,CAAC,CAAC;QACtCM,SAAS,CAACE,UAAU,CAAC;QACrB;QACA;QACAC,OAAO,CAACC,GAAG,CAACF,UAAU,CAACG,SAAS,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC;MAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAIlBb,MAAM,CAACM,SAAS,CAAC,CAAC,CAAC,CAACC,OAAO;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzB,CAAC;AAEV,CAAC;AAACd,EAAA,CA/BID,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}