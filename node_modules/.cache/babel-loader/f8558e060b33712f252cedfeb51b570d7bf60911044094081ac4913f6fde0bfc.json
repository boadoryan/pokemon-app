{"ast":null,"code":"var _jsxFileName = \"/Users/ryanboado/Code/Poke App/pokemon-app/src/components/PokemonEvolutionsCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EvolutionChain = ({\n  pokemonId\n}) => {\n  _s();\n  const [evolutionChain, setEvolutionChain] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchEvolutionChain = async () => {\n      try {\n        // Fetch the Pokémon species data to get the evolution chain URL\n        const response = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${pokemonId + 1}/`);\n\n        // Extract the evolution chain URL\n        const evolutionChainUrl = response.data.evolution_chain.url;\n\n        // Fetch the evolution chain data\n        const evolutionChainResponse = await axios.get(evolutionChainUrl);\n\n        // Extract the evolution chain details\n        let chain = evolutionChainResponse.data.chain;\n\n        // Traverse the evolution chain and store Pokémon names\n        const evolutionNames = [];\n        let currentPokemon = chain.species.name;\n        evolutionNames.push(currentPokemon);\n        while (chain.evolves_to.length > 0) {\n          currentPokemon = chain.evolves_to[0].species.name;\n          evolutionNames.push(currentPokemon);\n          chain = chain.evolves_to[0];\n        }\n\n        // Set the evolution chain in state\n        setEvolutionChain(evolutionNames);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching evolution chain:\", error);\n      }\n    };\n    fetchEvolutionChain();\n  }, [pokemonId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading evolution chain...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xl md:text-2xl font-bold mb-2 md:mb-4\",\n      children: \"Evolution Chain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: evolutionChain.map((pokemon, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: pokemon\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(EvolutionChain, \"yUJXpejaqLaKCN+ijzgyuOeqdAM=\");\n_c = EvolutionChain;\nexport default EvolutionChain;\nvar _c;\n$RefreshReg$(_c, \"EvolutionChain\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","EvolutionChain","pokemonId","_s","evolutionChain","setEvolutionChain","loading","setLoading","fetchEvolutionChain","response","get","evolutionChainUrl","data","evolution_chain","url","evolutionChainResponse","chain","evolutionNames","currentPokemon","species","name","push","evolves_to","length","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","pokemon","index","_c","$RefreshReg$"],"sources":["/Users/ryanboado/Code/Poke App/pokemon-app/src/components/PokemonEvolutionsCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst EvolutionChain = ({ pokemonId }) => {\n  const [evolutionChain, setEvolutionChain] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchEvolutionChain = async () => {\n      try {\n        // Fetch the Pokémon species data to get the evolution chain URL\n        const response = await axios.get(\n          `https://pokeapi.co/api/v2/pokemon-species/${pokemonId + 1}/`\n        );\n\n        // Extract the evolution chain URL\n        const evolutionChainUrl = response.data.evolution_chain.url;\n\n        // Fetch the evolution chain data\n        const evolutionChainResponse = await axios.get(evolutionChainUrl);\n\n        // Extract the evolution chain details\n        let chain = evolutionChainResponse.data.chain;\n\n        // Traverse the evolution chain and store Pokémon names\n        const evolutionNames = [];\n        let currentPokemon = chain.species.name;\n        evolutionNames.push(currentPokemon);\n\n        while (chain.evolves_to.length > 0) {\n          currentPokemon = chain.evolves_to[0].species.name;\n          evolutionNames.push(currentPokemon);\n          chain = chain.evolves_to[0];\n        }\n\n        // Set the evolution chain in state\n        setEvolutionChain(evolutionNames);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching evolution chain:\", error);\n      }\n    };\n\n    fetchEvolutionChain();\n  }, [pokemonId]);\n\n  if (loading) {\n    return <div>Loading evolution chain...</div>;\n  }\n\n  return (\n    <div>\n      <div className=\"text-xl md:text-2xl font-bold mb-2 md:mb-4\">\n        Evolution Chain\n      </div>\n      <ul>\n        {evolutionChain.map((pokemon, index) => (\n          <li key={index}>{pokemon}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default EvolutionChain;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMY,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAC7B,6CAA4CR,SAAS,GAAG,CAAE,GAC7D,CAAC;;QAED;QACA,MAAMS,iBAAiB,GAAGF,QAAQ,CAACG,IAAI,CAACC,eAAe,CAACC,GAAG;;QAE3D;QACA,MAAMC,sBAAsB,GAAG,MAAMjB,KAAK,CAACY,GAAG,CAACC,iBAAiB,CAAC;;QAEjE;QACA,IAAIK,KAAK,GAAGD,sBAAsB,CAACH,IAAI,CAACI,KAAK;;QAE7C;QACA,MAAMC,cAAc,GAAG,EAAE;QACzB,IAAIC,cAAc,GAAGF,KAAK,CAACG,OAAO,CAACC,IAAI;QACvCH,cAAc,CAACI,IAAI,CAACH,cAAc,CAAC;QAEnC,OAAOF,KAAK,CAACM,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;UAClCL,cAAc,GAAGF,KAAK,CAACM,UAAU,CAAC,CAAC,CAAC,CAACH,OAAO,CAACC,IAAI;UACjDH,cAAc,CAACI,IAAI,CAACH,cAAc,CAAC;UACnCF,KAAK,GAAGA,KAAK,CAACM,UAAU,CAAC,CAAC,CAAC;QAC7B;;QAEA;QACAjB,iBAAiB,CAACY,cAAc,CAAC;QACjCV,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDhB,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;EAEf,IAAII,OAAO,EAAE;IACX,oBAAON,OAAA;MAAA0B,QAAA,EAAK;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9C;EAEA,oBACE9B,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAK+B,SAAS,EAAC,4CAA4C;MAAAL,QAAA,EAAC;IAE5D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN9B,OAAA;MAAA0B,QAAA,EACGtB,cAAc,CAAC4B,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACjClC,OAAA;QAAA0B,QAAA,EAAiBO;MAAO,GAAfC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA3DIF,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AA6DpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}