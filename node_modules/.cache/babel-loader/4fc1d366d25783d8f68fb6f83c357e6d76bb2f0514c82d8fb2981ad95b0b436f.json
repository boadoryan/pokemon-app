{"ast":null,"code":"import axios from \"axios\";\nconst fetchQuotes = async (limit, apiURL) => {\n  const apiUrl = `https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=0`;\n  try {\n    const response = await axios.get(apiUrl);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nconst getPokemon = async (res, stateToSet) => {\n  try {\n    const pokemonPromises = res.map(async item => {\n      const result = await axios.get(item.url);\n      return result.data;\n    });\n    const pokemonData = await Promise.all(pokemonPromises);\n    stateToSet(pokemonData);\n  } catch (error) {\n    console.error(\"Error fetching Pokémon data:\", error);\n  }\n};\nconst fetchEvolutionChain = async (pokemonId, pokemonName, stateToSet) => {\n  try {\n    const speciesResponse = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${pokemonId}/`);\n    const evolutionChainUrl = speciesResponse.data.evolution_chain.url;\n    const evolutionChainResponse = await axios.get(evolutionChainUrl);\n    let chain = evolutionChainResponse.data.chain;\n    const evolutionData = {};\n    while (chain) {\n      const pokemonName = chain.species.name;\n      const pokemonResponse = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonName}/`);\n      const imageUrl = pokemonResponse.data.sprites.front_default;\n      evolutionData[pokemonName] = imageUrl;\n      if (chain.evolves_to.length > 0) {\n        chain = chain.evolves_to[0];\n      } else {\n        break;\n      }\n    }\n    stateToSet(evolutionData);\n  } catch (error) {\n    console.error(\"Error fetching evolution chain:\", error);\n  }\n};\nexport { fetchQuotes, getPokemon, fetchEvolutionChain };","map":{"version":3,"names":["axios","fetchQuotes","limit","apiURL","apiUrl","response","get","data","error","getPokemon","res","stateToSet","pokemonPromises","map","item","result","url","pokemonData","Promise","all","console","fetchEvolutionChain","pokemonId","pokemonName","speciesResponse","evolutionChainUrl","evolution_chain","evolutionChainResponse","chain","evolutionData","species","name","pokemonResponse","imageUrl","sprites","front_default","evolves_to","length"],"sources":["/Users/ryanboado/Code/Poke App/pokemon-app/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst fetchQuotes = async (limit, apiURL) => {\n  const apiUrl = `https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=0`;\n  try {\n    const response = await axios.get(apiUrl);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst getPokemon = async (res, stateToSet) => {\n  try {\n    const pokemonPromises = res.map(async (item) => {\n      const result = await axios.get(item.url);\n      return result.data;\n    });\n\n    const pokemonData = await Promise.all(pokemonPromises);\n    stateToSet(pokemonData);\n  } catch (error) {\n    console.error(\"Error fetching Pokémon data:\", error);\n  }\n};\n\nconst fetchEvolutionChain = async (pokemonId, pokemonName, stateToSet) => {\n  try {\n    const speciesResponse = await axios.get(\n      `https://pokeapi.co/api/v2/pokemon-species/${pokemonId}/`\n    );\n    const evolutionChainUrl = speciesResponse.data.evolution_chain.url;\n    const evolutionChainResponse = await axios.get(evolutionChainUrl);\n    let chain = evolutionChainResponse.data.chain;\n    const evolutionData = {};\n\n    while (chain) {\n      const pokemonName = chain.species.name;\n      const pokemonResponse = await axios.get(\n        `https://pokeapi.co/api/v2/pokemon/${pokemonName}/`\n      );\n      const imageUrl = pokemonResponse.data.sprites.front_default;\n      evolutionData[pokemonName] = imageUrl;\n\n      if (chain.evolves_to.length > 0) {\n        chain = chain.evolves_to[0];\n      } else {\n        break;\n      }\n    }\n\n    stateToSet(evolutionData);\n  } catch (error) {\n    console.error(\"Error fetching evolution chain:\", error);\n  }\n};\n\nexport { fetchQuotes, getPokemon, fetchEvolutionChain };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAG,MAAAA,CAAOC,KAAK,EAAEC,MAAM,KAAK;EAC3C,MAAMC,MAAM,GAAI,4CAA2CF,KAAM,WAAU;EAC3E,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACF,MAAM,CAAC;IACxC,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMC,UAAU,GAAG,MAAAA,CAAOC,GAAG,EAAEC,UAAU,KAAK;EAC5C,IAAI;IACF,MAAMC,eAAe,GAAGF,GAAG,CAACG,GAAG,CAAC,MAAOC,IAAI,IAAK;MAC9C,MAAMC,MAAM,GAAG,MAAMf,KAAK,CAACM,GAAG,CAACQ,IAAI,CAACE,GAAG,CAAC;MACxC,OAAOD,MAAM,CAACR,IAAI;IACpB,CAAC,CAAC;IAEF,MAAMU,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACP,eAAe,CAAC;IACtDD,UAAU,CAACM,WAAW,CAAC;EACzB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdY,OAAO,CAACZ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACtD;AACF,CAAC;AAED,MAAMa,mBAAmB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,WAAW,EAAEZ,UAAU,KAAK;EACxE,IAAI;IACF,MAAMa,eAAe,GAAG,MAAMxB,KAAK,CAACM,GAAG,CACpC,6CAA4CgB,SAAU,GACzD,CAAC;IACD,MAAMG,iBAAiB,GAAGD,eAAe,CAACjB,IAAI,CAACmB,eAAe,CAACV,GAAG;IAClE,MAAMW,sBAAsB,GAAG,MAAM3B,KAAK,CAACM,GAAG,CAACmB,iBAAiB,CAAC;IACjE,IAAIG,KAAK,GAAGD,sBAAsB,CAACpB,IAAI,CAACqB,KAAK;IAC7C,MAAMC,aAAa,GAAG,CAAC,CAAC;IAExB,OAAOD,KAAK,EAAE;MACZ,MAAML,WAAW,GAAGK,KAAK,CAACE,OAAO,CAACC,IAAI;MACtC,MAAMC,eAAe,GAAG,MAAMhC,KAAK,CAACM,GAAG,CACpC,qCAAoCiB,WAAY,GACnD,CAAC;MACD,MAAMU,QAAQ,GAAGD,eAAe,CAACzB,IAAI,CAAC2B,OAAO,CAACC,aAAa;MAC3DN,aAAa,CAACN,WAAW,CAAC,GAAGU,QAAQ;MAErC,IAAIL,KAAK,CAACQ,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;QAC/BT,KAAK,GAAGA,KAAK,CAACQ,UAAU,CAAC,CAAC,CAAC;MAC7B,CAAC,MAAM;QACL;MACF;IACF;IAEAzB,UAAU,CAACkB,aAAa,CAAC;EAC3B,CAAC,CAAC,OAAOrB,KAAK,EAAE;IACdY,OAAO,CAACZ,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;EACzD;AACF,CAAC;AAED,SAASP,WAAW,EAAEQ,UAAU,EAAEY,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}