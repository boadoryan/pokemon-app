{"ast":null,"code":"var _jsxFileName = \"/Users/ryanboado/Code/Poke App/pokemon-app/src/components/PokemonEvolutionsCard.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonEvolutionsCard = (pokemonData, currentSelectedPokemon, formatText) => {\n  _s();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch the current Pokémon species data\n        const response = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${currentSelectedPokemon + 1}/`);\n\n        // Extract the URL of the evolution chain from the response data\n        const evolutionChainUrl = response.data.evolution_chain.url;\n\n        // Fetch the evolution chain data\n        const evolData = await axios.get(evolutionChainUrl);\n        // console.log(evolData.data.chain.evolves_to[0].evolves_to[0]);\n        console.log(evolData.data.chain.evolves_to[0]);\n\n        // const matchingPokemon = pokemonData.find(\n        //   (pokemon) =>\n        //     pokemon.name === evolData.data.chain.evolves_to[0].species.name\n        // );\n        // if (matchingPokemon) {\n        //   console.log(matchingPokemon);\n        // } else {\n        //   console.log(\"dafas\");\n        // }\n        // Set the evolution data in your state\n        setEvolutionData(evolData.data);\n\n        // Finally, set loading to false\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [currentSelectedPokemon]); // Include currentSelectedPokemon in the dependency array\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"PokemonEvolutionsCard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n_s(PokemonEvolutionsCard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PokemonEvolutionsCard;\nexport default PokemonEvolutionsCard;\nvar _c;\n$RefreshReg$(_c, \"PokemonEvolutionsCard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PokemonEvolutionsCard","pokemonData","currentSelectedPokemon","formatText","_s","fetchData","response","axios","get","evolutionChainUrl","data","evolution_chain","url","evolData","console","log","chain","evolves_to","setEvolutionData","setLoading","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ryanboado/Code/Poke App/pokemon-app/src/components/PokemonEvolutionsCard.jsx"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nconst PokemonEvolutionsCard = (\n  pokemonData,\n  currentSelectedPokemon,\n  formatText\n) => {\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch the current Pokémon species data\n        const response = await axios.get(\n          `https://pokeapi.co/api/v2/pokemon-species/${\n            currentSelectedPokemon + 1\n          }/`\n        );\n\n        // Extract the URL of the evolution chain from the response data\n        const evolutionChainUrl = response.data.evolution_chain.url;\n\n        // Fetch the evolution chain data\n        const evolData = await axios.get(evolutionChainUrl);\n        // console.log(evolData.data.chain.evolves_to[0].evolves_to[0]);\n        console.log(evolData.data.chain.evolves_to[0]);\n\n        // const matchingPokemon = pokemonData.find(\n        //   (pokemon) =>\n        //     pokemon.name === evolData.data.chain.evolves_to[0].species.name\n        // );\n        // if (matchingPokemon) {\n        //   console.log(matchingPokemon);\n        // } else {\n        //   console.log(\"dafas\");\n        // }\n        // Set the evolution data in your state\n        setEvolutionData(evolData.data);\n\n        // Finally, set loading to false\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, [currentSelectedPokemon]); // Include currentSelectedPokemon in the dependency array\n  return <div>PokemonEvolutionsCard</div>;\n};\n\nexport default PokemonEvolutionsCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,qBAAqB,GAAGA,CAC5BC,WAAW,EACXC,sBAAsB,EACtBC,UAAU,KACP;EAAAC,EAAA;EACHR,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAC7B,6CACCN,sBAAsB,GAAG,CAC1B,GACH,CAAC;;QAED;QACA,MAAMO,iBAAiB,GAAGH,QAAQ,CAACI,IAAI,CAACC,eAAe,CAACC,GAAG;;QAE3D;QACA,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACC,GAAG,CAACC,iBAAiB,CAAC;QACnD;QACAK,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACH,IAAI,CAACM,KAAK,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC;;QAE9C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACAC,gBAAgB,CAACL,QAAQ,CAACH,IAAI,CAAC;;QAE/B;QACAS,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDf,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,sBAAsB,CAAC,CAAC,CAAC,CAAC;EAC9B,oBAAOH,OAAA;IAAAsB,QAAA,EAAK;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACzC,CAAC;AAACrB,EAAA,CA7CIJ,qBAAqB;AAAA0B,EAAA,GAArB1B,qBAAqB;AA+C3B,eAAeA,qBAAqB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}