{"ast":null,"code":"var _jsxFileName = \"/Users/ryanboado/Code/Poke App/pokemon-app/src/components/PokemonEvolutionsCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EvolutionChain = ({\n  pokemonId\n}) => {\n  _s();\n  const [evolutionChain, setEvolutionChain] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch the Pokémon species data based on the provided ID\n        const speciesResponse = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${pokemonId}/`);\n        const evolutionChainUrl = speciesResponse.data.evolution_chain.url;\n\n        // Fetch the evolution chain data\n        const evolutionResponse = await axios.get(evolutionChainUrl);\n        const evolutionData = evolutionResponse.data.chain;\n\n        // Traverse the evolution chain data and extract Pokémon names\n        const extractEvolutions = chain => {\n          const result = [];\n          const extract = pokemon => {\n            const {\n              species,\n              evolution_details,\n              evolves_to\n            } = pokemon;\n            result.push({\n              name: species.name,\n              details: evolution_details\n            });\n            if (evolves_to.length > 0) {\n              evolves_to.forEach(evolve => extract(evolve));\n            }\n          };\n          extract(chain);\n          return result;\n        };\n        const pokemonEvolutions = extractEvolutions(evolutionData);\n\n        // Set the evolution chain data in state\n        setEvolutionChain(pokemonEvolutions);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [pokemonId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Evolution Chain for Pokemon #\", pokemonId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: evolutionChain.map((pokemon, index) => {\n        var _pokemon$details$;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [pokemon.name, \" (Level: \", ((_pokemon$details$ = pokemon.details[0]) === null || _pokemon$details$ === void 0 ? void 0 : _pokemon$details$.min_level) || \"N/A\", \")\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(EvolutionChain, \"yUJXpejaqLaKCN+ijzgyuOeqdAM=\");\n_c = EvolutionChain;\nexport default EvolutionChain;\nvar _c;\n$RefreshReg$(_c, \"EvolutionChain\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","EvolutionChain","pokemonId","_s","evolutionChain","setEvolutionChain","loading","setLoading","fetchData","speciesResponse","get","evolutionChainUrl","data","evolution_chain","url","evolutionResponse","evolutionData","chain","extractEvolutions","result","extract","pokemon","species","evolution_details","evolves_to","push","name","details","length","forEach","evolve","pokemonEvolutions","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_pokemon$details$","min_level","_c","$RefreshReg$"],"sources":["/Users/ryanboado/Code/Poke App/pokemon-app/src/components/PokemonEvolutionsCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst EvolutionChain = ({ pokemonId }) => {\n  const [evolutionChain, setEvolutionChain] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch the Pokémon species data based on the provided ID\n        const speciesResponse = await axios.get(\n          `https://pokeapi.co/api/v2/pokemon-species/${pokemonId}/`\n        );\n        const evolutionChainUrl = speciesResponse.data.evolution_chain.url;\n\n        // Fetch the evolution chain data\n        const evolutionResponse = await axios.get(evolutionChainUrl);\n        const evolutionData = evolutionResponse.data.chain;\n\n        // Traverse the evolution chain data and extract Pokémon names\n        const extractEvolutions = (chain) => {\n          const result = [];\n\n          const extract = (pokemon) => {\n            const { species, evolution_details, evolves_to } = pokemon;\n            result.push({\n              name: species.name,\n              details: evolution_details,\n            });\n\n            if (evolves_to.length > 0) {\n              evolves_to.forEach((evolve) => extract(evolve));\n            }\n          };\n\n          extract(chain);\n          return result;\n        };\n\n        const pokemonEvolutions = extractEvolutions(evolutionData);\n\n        // Set the evolution chain data in state\n        setEvolutionChain(pokemonEvolutions);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, [pokemonId]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h2>Evolution Chain for Pokemon #{pokemonId}</h2>\n      <ul>\n        {evolutionChain.map((pokemon, index) => (\n          <li key={index}>\n            {pokemon.name} (Level: {pokemon.details[0]?.min_level || \"N/A\"})\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default EvolutionChain;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}